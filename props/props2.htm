<!DOCTYPE html>
<html>

<head>
    <title>props test</title>
    <style>
        [v-cloak] {
            display: none;
        }
    </style>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>

<body>
    <div id="app" v-cloak>
        <h1>{{headingText}}</h1>
        <custom-form />
    </div>
    <script src="https://unpkg.com/vue@next"></script>
    <script>
        let app = Vue.createApp({
            data() {
                return {
                    headingText: 'props testing'
                }
            },

        })
        app.component('custom-form', {
            template:
                `
            <form @submit.prevent='handleSubmit'>
                <custom-form-input :label="emailText" v-model="emailInput"/>
                <custom-form-input :label="passwordText" v-model="passwordInput"/>
                <button type="submit" class="btn btn-default">Submit</button>
            </form>
            `,
            data() {
                return {
                    emailText: 'Enter Email',
                    passwordText: 'Enter pass',
                    emailInput: 'please',
                    passwordInput: 'bring it',
                }
            },
            methods: {
                handleSubmit() {
                    console.log('submitted' + this.emailInput + this.passwordInput)
                }
            },
            components: ['custom-form-field'],

        })
        app.component('custom-form-input', {
            template:
                `
                <div class="form-group">
                    <label>{{label}}</label>
                    <input class="form-control" v-model="inputValue">
                </div>
                `,
            props: ['label', 'modelValue'],
            computed: {
                inputValue: {
                    get() {
                        return this.modelValue
                    },
                    set(value) {
                        this.$emit('update:modelValue', value)
                    }
                }
            }
        })
        app.mount('#app')
    </script>
</body>

</html>